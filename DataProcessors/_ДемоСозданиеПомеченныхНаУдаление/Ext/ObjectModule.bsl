#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

Функция НастройкиПоУмолчанию() Экспорт
	Результат = Новый Структура;
	
	Результат.Вставить("ЛинейнаяЗависимостьИспользование", Истина);
	Результат.Вставить("ЛинейнаяЗависимостьДлина", 5);
	Результат.Вставить("ЛинейнаяЗависимостьПрефикс", НСтр("ru = 'Тест удаления 1: Линия %1 (используется в %2)'"));
	
	Результат.Вставить("РешаемаяКольцеваяЗависимостьИспользование", Истина);
	Результат.Вставить("РешаемаяКольцеваяЗависимостьДлина", 10);
	Результат.Вставить("РешаемаяКольцеваяЗависимостьПрефикс", НСтр("ru = 'Тест удаления 2: Кольцо %1 (используется в %2)'"));
	
	Результат.Вставить("НеРешаемаяКольцеваяЗависимостьИспользование", Истина);
	Результат.Вставить("НеРешаемаяКольцеваяЗависимостьДлина", 10);
	Результат.Вставить("НеРешаемаяКольцеваяЗависимостьПрефикс", НСтр("ru = 'Тест удаления 3: Кольцо %1 (используется в %2)'"));
	
	Результат.Вставить("ПомеченныйНаУдалениеВыбранВКонстантеИспользование", Истина);
	Результат.Вставить("ПомеченныйНаУдалениеВыбранВКонстантеПрефикс", НСтр("ru = 'Тест удаления 4: Организация выбрана в константе'"));
	
	Возврат Результат;
КонецФункции

Процедура Сгенерировать(КоллекцияНастроек) Экспорт
	Настройки = НастройкиПоУмолчанию();
	Если КоллекцияНастроек <> Неопределено Тогда
		ЗаполнитьЗначенияСвойств(Настройки, КоллекцияНастроек);
	КонецЕсли;
	
	ПомечаемыеНаУдаление = Новый Массив;
	СправочникМенеджер = Справочники._ДемоНоменклатура;
	ГСЧ = Новый ГенераторСлучайныхЧисел;
	
	ПрепятствующийУдалениюНаименование = НСтр("ru = 'Тест удаления: Объект, не помеченный на удаление'");
	ПрепятствующийУдалениюСсылка = СправочникМенеджер.НайтиПоНаименованию(ПрепятствующийУдалениюНаименование);
	Если ЗначениеЗаполнено(ПрепятствующийУдалениюСсылка) Тогда
		ПрепятствующийУдалениюОбъект = ПрепятствующийУдалениюСсылка.ПолучитьОбъект();
	Иначе
		ПрепятствующийУдалениюОбъект = СправочникМенеджер.СоздатьЭлемент();
		ПрепятствующийУдалениюОбъект.Наименование = ПрепятствующийУдалениюНаименование;
		ПрепятствующийУдалениюОбъект.Записать();
		ПрепятствующийУдалениюСсылка = ПрепятствующийУдалениюОбъект.Ссылка;
	КонецЕсли;
	
	// Разрешимая цепочка.
	Если Настройки.ЛинейнаяЗависимостьИспользование Тогда
		ШаблонНаименования = Настройки.ЛинейнаяЗависимостьПрефикс;
		ПоследняяСсылка = Неопределено;
		Для НомерЭлемента = 1 По Настройки.ЛинейнаяЗависимостьДлина Цикл
			СправочникОбъект = СправочникМенеджер.СоздатьЭлемент();
			СправочникОбъект.Наименование = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ШаблонНаименования,
				Формат(НомерЭлемента, "ЧГ="),
				?(НомерЭлемента = 1, "-", "" + Формат(НомерЭлемента-1, "ЧГ=")));
			СправочникОбъект.Аналоги.Добавить().Аналог = ПоследняяСсылка;
			СправочникОбъект.Записать();
			ПоследняяСсылка = СправочникОбъект.Ссылка;
			ПомечаемыеНаУдаление.Добавить(СправочникОбъект);
		КонецЦикла;
	КонецЕсли;
	
	Для ВариантЦепочки = 1 По 2 Цикл
		// 1 - Разрешимая цепочка.
		// 2 - Неразрешимая цепочка.
		Если ВариантЦепочки = 1 Тогда
			Если Не Настройки.РешаемаяКольцеваяЗависимостьИспользование Тогда
				Продолжить;
			КонецЕсли;
			ШаблонНаименования = Настройки.РешаемаяКольцеваяЗависимостьПрефикс;
			ДлинаКольца = Настройки.РешаемаяКольцеваяЗависимостьДлина;
			НомерСлучайногоОбъекта = 0;
		Иначе
			Если Не Настройки.НеРешаемаяКольцеваяЗависимостьИспользование Тогда
				Продолжить;
			КонецЕсли;
			ШаблонНаименования = Настройки.НеРешаемаяКольцеваяЗависимостьПрефикс;
			ДлинаКольца = Настройки.НеРешаемаяКольцеваяЗависимостьДлина;
			НомерСлучайногоОбъекта = ГСЧ.СлучайноеЧисло(1, ДлинаКольца);
		КонецЕсли;
		
		СлучайныйОбъект = Неопределено;
		ПервыйОбъект = Неопределено;
		ПоследняяСсылка = Неопределено;
		Для НомерЭлемента = 1 По ДлинаКольца Цикл
			СправочникОбъект = СправочникМенеджер.СоздатьЭлемент();
			СправочникОбъект.Наименование = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ШаблонНаименования,
				Формат(НомерЭлемента, "ЧГ="),
				"" + Формат(?(НомерЭлемента = 1, ДлинаКольца, НомерЭлемента-1), "ЧГ="));
			СправочникОбъект.Аналоги.Добавить().Аналог = ПоследняяСсылка;
			СправочникОбъект.Записать();
			ПоследняяСсылка = СправочникОбъект.Ссылка;
			Если НомерЭлемента = 1 Тогда
				ПервыйОбъект = СправочникОбъект;
			КонецЕсли;
			Если НомерЭлемента = НомерСлучайногоОбъекта Тогда
				СлучайныйОбъект = СправочникОбъект;
			КонецЕсли;
			ПомечаемыеНаУдаление.Добавить(СправочникОбъект);
		КонецЦикла;
		ПервыйОбъект.Аналоги.Добавить().Аналог = ПоследняяСсылка;
		ПервыйОбъект.Записать();
		
		Если ВариантЦепочки = 2 Тогда
			ПрепятствующийУдалениюОбъект.Аналоги.Добавить().Аналог = СлучайныйОбъект.Ссылка;
			ПрепятствующийУдалениюОбъект.Записать();
			ПрефиксШаблона = Лев(ШаблонНаименования, СтрНайти(ШаблонНаименования, ":")+1);
			СлучайныйОбъект.Наименование = ПрефиксШаблона + НСтр("ru = 'Номенклатура использована в не помеченном объекте'");
			СлучайныйОбъект.Записать();
		КонецЕсли;
	КонецЦикла;
	
	Если Настройки.ПомеченныйНаУдалениеВыбранВКонстантеИспользование Тогда
		ОрганизацияСсылка = Справочники.Организации.НайтиПоНаименованию(Настройки.ПомеченныйНаУдалениеВыбранВКонстантеПрефикс);
		Если ЗначениеЗаполнено(ОрганизацияСсылка) Тогда
			СправочникОбъект = ОрганизацияСсылка.ПолучитьОбъект();
		Иначе
			СправочникОбъект = Справочники.Организации.СоздатьЭлемент();
			СправочникОбъект.Наименование = Настройки.ПомеченныйНаУдалениеВыбранВКонстантеПрефикс;
			СправочникОбъект.Записать();
			ОрганизацияСсылка = СправочникОбъект.Ссылка;
		КонецЕсли;
		Константы._ДемоОсновнаяОрганизация.Установить(ОрганизацияСсылка);
		ПомечаемыеНаУдаление.Добавить(СправочникОбъект);
	КонецЕсли;
	
	// Установка пометок удаления в случайном порядке.
	ОсталосьПометить = ПомечаемыеНаУдаление.Количество();
	ГСЧ = Новый ГенераторСлучайныхЧисел;
	Пока ОсталосьПометить > 0 Цикл
		ОсталосьПометить = ОсталосьПометить - 1;
		Индекс = ГСЧ.СлучайноеЧисло(0, ОсталосьПометить);
		ПомечаемыеНаУдаление[Индекс].УстановитьПометкуУдаления(Истина);
		ПомечаемыеНаУдаление.Удалить(Индекс);
	КонецЦикла;
КонецПроцедуры

#КонецОбласти

#КонецЕсли