
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ПутьКВременномуФайлуДанных = Неопределено;
	Параметры.Свойство("ПутьКВременномуФайлуДанных", ПутьКВременномуФайлуДанных);
	
	ПутьКФайлу = Неопределено;
	Параметры.Свойство("ПутьКФайлу", ПутьКФайлу);
	
	ИмяПодсистемы = Неопределено;
	Параметры.Свойство("ИмяПодсистемы", ИмяПодсистемы);
	
	Подсистемы = Неопределено;
	Параметры.Свойство("СписокПодсистем", Подсистемы);
	Если Подсистемы <> Неопределено Тогда 
		СписокПодсистем.Загрузить(Подсистемы.Выгрузить());
	КонецЕсли;
	
	ОпределитьВопросыПоПодсистеме();
	Если ДополнительныеВопросы.Количество() = 0 Тогда
	Иначе
		Элементы.НадписьНазванияПодсистемы.Заголовок = "Подсистема " + ИмяПодсистемы;
		НомерВопроса = 0;
		ВывестиТекущийВопрос();
	КонецЕсли;
	
	ИмяФормыВыбора = РеквизитФормыВЗначение("Объект").ИмяФормыОбработки(ИмяФормы, "ВыборОбъектовМетаданных");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ВыводитьНеИспользоватьВКИ();
	
	Если ДополнительныеВопросы.Количество() = 0 Тогда
		ТекстПредупреждения = НСтр("ru = 'По данной подсистеме нет дополнительных параметров'");
		ПоказатьПредупреждение(, ТекстПредупреждения);
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	Если ПроверитьВводФайла() Тогда
		ЗаписатьОтветНаВопрос();
	КонецЕсли;
	
	Оповестить("Запись_ПомощникВнедренияБСП_ВводДополнительныхПараметровВнедрения");
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ВыборОбъектовМетаданных" Тогда
		ОбъектныйОтвет.Очистить();
		ЗаполнитьЗначениями(Параметр);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НеИспользоватьВКИПриИзменении(Элемент)
	
	ДоступностьВыбораПодсистем(Не НеТребуетсяРазмещатьВКомандномИнтерфейсе);
	ОбъектныйОтвет.Очистить();
	
	Если НеТребуетсяРазмещатьВКомандномИнтерфейсе Тогда 
		ОбъектныйОтвет.Добавить(Элемент.Заголовок, Элемент.Заголовок);
		РазмещатьНаРабочемСтоле = Не НеТребуетсяРазмещатьВКомандномИнтерфейсе;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РазмещатьНаРабочемСтолеПриИзменении(Элемент)
	
	Если РазмещатьНаРабочемСтоле Тогда 
		ОбъектныйОтвет.Добавить(Элемент.Заголовок, Элемент.Заголовок);
	Иначе
		ОбъектСписка = ОбъектныйОтвет.НайтиПоЗначению(Элемент.Заголовок);
		Если ОбъектСписка <> Неопределено Тогда 
			ОбъектныйОтвет.Удалить(ОбъектСписка);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗадатьРазделы(Команда)
	ВыбранныеОбъектыМетаданных = Неопределено;
	Если ОбъектныйОтвет.Количество() >0 Тогда
		
		ВыбранныеОбъектыМетаданных = ОбъектныйОтвет;
		
	КонецЕсли;
	Если ПустаяСтрока(СтрокаОтбораДляОбъектногоОтвета) Тогда
		ЗаголовокФормы = НСтр("ru = 'Выбор разделов'");
		ПараметрыФормы = Новый Структура("ВыбранныеОбъектыМетаданных, Заголовок",ВыбранныеОбъектыМетаданных, ЗаголовокФормы);
		СписокОтветов = ОткрытьФорму(ИмяФормыВыбора, ПараметрыФормы);
	Иначе
		ТолькоКомандныйИнтерфейс = Ложь;
		СписокОтбораТекст = РазложитьСтрокуВМассивПодстрок(СтрокаОтбораДляОбъектногоОтвета);
		СписокОтбора = Новый СписокЗначений;
		Для Каждого ЭлементОтбора Из СписокОтбораТекст Цикл
			Если ЭлементОтбора = "ПодсистемыКИ" Тогда
				СписокОтбора.Добавить("Подсистемы");
				ТолькоКомандныйИнтерфейс = Истина;
			Иначе
				СписокОтбора.Добавить(ЭлементОтбора);
			КонецЕсли;
		КонецЦикла;
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("КоллекцииВыбираемыхОбъектовМетаданных", СписокОтбора);
		ПараметрыФормы.Вставить("ВыбранныеОбъектыМетаданных", ВыбранныеОбъектыМетаданных);
		ПараметрыФормы.Вставить("ТолькоПодсистемыСКИ", ТолькоКомандныйИнтерфейс);
		ПараметрыФормы.Вставить("Заголовок", НСтр("ru = 'Выбор разделов'"));
		ОткрытьФорму(ИмяФормыВыбора, ПараметрыФормы);
	КонецЕсли;
	
	// СОбнуление" флага "РазмещатьНаРабочемСтоле".
	РазмещатьНаРабочемСтоле = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура Далее(Команда)
	Если ПроверитьВводФайла() Тогда
		Если НомерВопроса = ДополнительныеВопросы.Количество() - 1 Тогда
			Закрыть();
		Иначе
			ЗаписатьОтветНаВопрос();
			НомерВопроса = НомерВопроса + 1;
			ВывестиТекущийВопрос();
		КонецЕсли;
	КонецЕсли;
	
	ВыводитьНеИспользоватьВКИ();
КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда)
	Если НомерВопроса > 0 Тогда
		НомерВопроса = НомерВопроса - 1;
		ВывестиТекущийВопрос();
	Иначе
		Закрыть();
	КонецЕсли;
	
	ВыводитьНеИспользоватьВКИ();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОпределитьВопросыПоПодсистеме()
	Макет = РеквизитФормыВЗначение("Объект").ПолучитьМакет("ЭлектронныйВопросник");
	ВременныйФайл = КаталогВременныхФайлов() + "ЭлектронныйВопросник.xml";
	Макет.Записать(ВременныйФайл);
	НашлиПодсистему = ЛожЬ;
	ЧтениеХМЛ = Новый ЧтениеXML;
	ЧтениеХМЛ.ОткрытьФайл(ВременныйФайл);
	
	Пока ЧтениеХМЛ.Прочитать() Цикл
		Если ЧтениеХМЛ.ЛокальноеИмя = "Подсистема" 
			И ЧтениеХМЛ.ТипУзла = ТипУзлаXML.НачалоЭлемента
			И ЧтениеХМЛ.ПолучитьАтрибут("Представление") = ИмяПодсистемы Тогда
			НашлиПодсистему = Истина;
		КонецЕсли;
		
		Если НашлиПодсистему
			И ЧтениеХМЛ.ЛокальноеИмя = "Вопрос"
			И ЧтениеХМЛ.ТипУзла = ТипУзлаXML.НачалоЭлемента
			И (Найти(ЧтениеХМЛ.ПолучитьАтрибут("Тип"), "ВыборОбъектов") = 0
				Или СтрНайти(ЧтениеХМЛ.ПолучитьАтрибут("Тип"), "Подсистемы") > 0) Тогда
					Параметр = ЧтениеХМЛ.ПолучитьАтрибут("Параметр");
					СтрокаТаблицы          = ДополнительныеВопросы.Добавить();
					СтрокаТаблицы.Вопрос   = ЧтениеХМЛ.ПолучитьАтрибут("НомерПП");
					СтрокаТаблицы.Параметр = ?(Параметр = Неопределено, "", Параметр);
		КонецЕсли;
		
		Если НашлиПодсистему И ЧтениеХМЛ.ЛокальноеИмя = "Подсистема" И ЧтениеХМл.ТипУзла = ТипУзлаXML.КонецЭлемента Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	ПривестиВопросы(ДополнительныеВопросы, СписокПодсистем);
	
КонецПроцедуры

Процедура ПривестиВопросы(Вопросы, Подсистемы)
	
	Фильтр = Новый Структура("Подсистема", "НастройкиПрограммы");
	
	МассивУдаляемыхВопросов = Новый Массив;
	Для Каждого Вопрос Из Вопросы Цикл
		Если Вопрос.Параметр = "НастройкиПрограммы" Тогда 
			Если Подсистемы.НайтиСтроки(Фильтр).Количество() <> 0 Тогда 
				МассивУдаляемыхВопросов.Добавить(Вопрос);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого УдаляемыйВопрос Из МассивУдаляемыхВопросов Цикл
		Вопросы.Удалить(УдаляемыйВопрос);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ВывестиТекущийВопрос()
	// Поищем вопрос
	Макет = РеквизитФормыВЗначение("Объект").ПолучитьМакет("ЭлектронныйВопросник");
	ВременныйФайл = КаталогВременныхФайлов() + "ЭлектронныйВопросник.xml";
	Макет.Записать(ВременныйФайл);
	НашлиВопрос = ЛожЬ;
	ЧтениеХМЛ = Новый ЧтениеXML;
	ЧтениеХМЛ.ОткрытьФайл(ВременныйФайл);
	
	Пока ЧтениеХМЛ.Прочитать() Цикл
		
		Если ЧтениеХМЛ.ЛокальноеИмя = "Вопрос" 
			И ЧтениеХМЛ.ТипУзла = ТипУзлаXML.НачалоЭлемента
			И ЧтениеХМЛ.ПолучитьАтрибут("НомерПП") = ДополнительныеВопросы[НомерВопроса].Вопрос Тогда
			НашлиВопрос = Истина;
			Если СтрНайти(ЧтениеХМЛ.ПолучитьАтрибут("Тип"), "ВыборОбъектов")> 0 Тогда
				Элементы.СтраницыВыбораПоляОтвета.ТекущаяСтраница = Элементы.СтраницыВыбораПоляОтвета.ПодчиненныеЭлементы.СтраницаОбъектногоОтвета;
				ПозицияНачалаОтбора = СтрНайти(ЧтениеХМЛ.ПолучитьАтрибут("Тип"),".");
				Если ПозицияНачалаОтбора > 0 Тогда
					СтрокаОтбораДляОбъектногоОтвета = Сред(ЧтениеХМЛ.ПолучитьАтрибут("Тип"),ПозицияНачалаОтбора+1);
				КонецЕсли;
				
			Иначе
				Элементы.СтраницыВыбораПоляОтвета.ТекущаяСтраница = Элементы.СтраницыВыбораПоляОтвета.ПодчиненныеЭлементы.СтраницаТекстовогоОтвета;
			КонецЕсли;
			ЧтениеХМЛ.Прочитать();
		КонецЕсли;
		
		Если Не НашлиВопрос Тогда 
			Продолжить; 
		КонецЕсли;
		
		Если ЧтениеХМЛ.ЛокальноеИмя = "Текст" И ЧтениеХМЛ.ТипУзла <> ТипУзлаXML.КонецЭлемента Тогда
			ЧтениеХМЛ.Прочитать();
			Элементы.НадписьТекстВопроса.Заголовок = ЧтениеХМЛ.Значение;
			СтрокаЗаголовка = ЭтотОбъект.Заголовок;
			ПозСкобки = СтрНайти(СтрокаЗаголовка, "(");
			Если ПозСкобки > 0 Тогда
				СтрокаЗаголовка = Лев(СтрокаЗаголовка, ПозСкобки-1);
			КонецЕсли;
			СтрокаЗаголовка = СокрЛП(СтрокаЗаголовка) + " (" + Строка(НомерВопроса+1)+" из "+ ДополнительныеВопросы.Количество()+")";
			ЭтотОбъект.Заголовок = СтрокаЗаголовка; 
		КонецЕсли;
		
		Если ЧтениеХМЛ.ЛокальноеИмя = "Пояснение" И ЧтениеХМЛ.ТипУзла <> ТипУзлаXML.КонецЭлемента Тогда
			Элементы.НадписьПояснениеВопроса.Видимость = Истина;
			ЧтениеХМЛ.Прочитать();
			Элементы.НадписьПояснениеВопроса.Заголовок = ЧтениеХМЛ.Значение;
		КонецЕсли;
		
		Если ЧтениеХМЛ.ЛокальноеИмя = "Вопрос"
			И ЧтениеХМЛ.ТипУзла  = ТипУзлаXML.КонецЭлемента 
			И НашлиВопрос Тогда
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	// Теперь поищем на него ответ.
	
	ЧтениеХМЛ = Новый ЧтениеXML;
	Если Не ПустаяСтрока(ПутьКФайлу) Тогда
		ЧтениеХМЛ.ОткрытьФайл(ПутьКФайлу);
	Иначе
		ЧтениеХМЛ.ОткрытьФайл(ПутьКВременномуФайлуДанных);
	КонецЕсли;
	
	НашлиОтвет = Ложь;
	Пока ЧтениеХМЛ.Прочитать() Цикл
		Если ЧтениеХМЛ.ЛокальноеИмя = "Вопрос" И ЧтениеХМЛ.ТипУзла = ТипУзлаXML.НачалоЭлемента
			И ЧтениеХМЛ.ПолучитьАтрибут("НомерПП") =  ДополнительныеВопросы[НомерВопроса].Вопрос Тогда
			НашлиОтвет = Истина;
		КонецЕсли;
		
		Если НашлиОтвет И ЧтениеХМЛ.ЛокальноеИмя = "Ответ" И ЧтениеХМЛ.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			ЧтениеХМЛ.Прочитать();
			Если ПустаяСтрока(ЧтениеХМЛ.Значение) Тогда
				НашлиОтвет = Ложь;
				Продолжить;
			КонецЕсли;
			СтрокаОтветов = ЧтениеХМЛ.Значение;
			МассивОтветов = РазложитьСтрокуВМассивПодстрок(СтрокаОтветов);
			СписокОтветов = Новый СписокЗначений;
			СписокОтветов.ЗагрузитьЗначения(МассивОтветов);
			Если Элементы.СтраницыВыбораПоляОтвета.ТекущаяСтраница = Элементы.СтраницыВыбораПоляОтвета.ПодчиненныеЭлементы.СтраницаОбъектногоОтвета Тогда
				ОбъектныйОтвет = СписокОтветов;
				
				Для Каждого ТекущийОтвет Из ОбъектныйОтвет Цикл
					ТекущийОтвет.Представление = СформироватьПредставление(ТекущийОтвет.Значение);
				КонецЦикла;
			
			Иначе
				ТекстовыйОтвет = СписокОтветов;
			КонецЕсли;
			НашлиОтвет = Ложь;
		КонецЕсли;
		
	КонецЦикла;
	// заголовок кнопки "Далее" 

	Если ДополнительныеВопросы.Количество() = 1 Тогда
		Элементы.Назад.Видимость = Ложь; 
	ИначеЕсли НомерВопроса = 0 Тогда
		Элементы.Назад.Доступность = Ложь; 
	Иначе
		Элементы.Назад.Доступность = Истина; 
	КонецЕсли;
	
	Если НомерВопроса = ДополнительныеВопросы.Количество() - 1 Тогда
		Элементы.Далее.Заголовок = "Готово";
	Иначе
		Элементы.Далее.Заголовок = "Далее";
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция СформироватьПредставление(ИмяОбъекта)
	Если Не ПустаяСтрока(Метаданные.НайтиПоПолномуИмени(ИмяОбъекта)) Тогда 
		СинонимОбъекта = Метаданные.НайтиПоПолномуИмени(ИмяОбъекта).Синоним;
		СтрокаПредставления = СинонимОбъекта + " ("+ИмяОбъекта+")";
		Возврат СтрокаПредставления;
	Иначе
		Возврат ИмяОбъекта;
	КонецЕсли;
КонецФункции

&НаСервере
Процедура ЗаполнитьЗначениями(СписокОбъектов)
	Для Каждого ВыбранныйТип Из СписокОбъектов Цикл
		ВыбранноеЗначение = ВыбранныйТип.Значение;
		ОбъектныйОтвет.Добавить(ВыбранноеЗначение, СформироватьПредставление(ВыбранноеЗначение));
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Функция ПроверитьВводФайла()
	Если ПустаяСтрока(ПутьКФайлу) Тогда
		ПутьКФайлу= ПутьКВременномуФайлуДанных;
	КонецЕсли;
	Возврат Истина;
КонецФункции

&НаКлиенте
Функция ПодготовитьСтрокуОтвета()
	ПолучатьЗначение = Истина;
	Если ОбъектныйОтвет.Количество() > 0 Тогда
		ВыбранныйСписок = ОбъектныйОтвет;
	Иначе
		ВыбранныйСписок = ТекстовыйОтвет;
		ПолучатьЗначение = Ложь;
	КонецЕсли;
	СтрокаВозврата = "";
	Для Каждого Ответ Из ВыбранныйСписок Цикл
		ТекстОтвета = Ответ.Значение;
		Если ПустаяСтрока(СтрокаВозврата) Тогда
			СтрокаВозврата = ТекстОтвета;
		Иначе
			СтрокаВозврата = СтрокаВозврата + "," + ТекстОтвета;
		КонецЕсли;
	КонецЦикла;
	ВыбранныйСписок.Очистить();
	Возврат СтрокаВозврата;
КонецФункции

&НаКлиенте
Процедура ЗаписатьОтветНаВопрос()
	КлючВопроса = ДополнительныеВопросы[НомерВопроса].Вопрос;
	Текст = Новый ТекстовыйДокумент;
	Текст.Прочитать(ПутьКФайлу);
	СчетчикСтрок = 0;
	ВопросНайден = Ложь;
	
	СтрокаОтвета = ПодготовитьСтрокуОтвета();
	
	Пока СчетчикСтрок < Текст.КоличествоСтрок() Цикл
		СтрокаПоиска = Текст.ПолучитьСтроку(СчетчикСтрок);
		Если СтрНайти(СтрокаПоиска,КлючВопроса) > 0 Тогда
			ВопросНайден = Истина;
		КонецЕсли;
		
		Если ВопросНайден И СтрНайти(СтрокаПоиска, "<Ответ") > 0 Тогда
			СтрокаПоиска= СтрЗаменить(СтрокаПоиска,СтрокаПоиска, "<Ответ>"+СтрокаОтвета+"</Ответ>");
			Текст.ЗаменитьСтроку(СчетчикСтрок, СтрокаПоиска);
			Текст.Записать(ПутьКФайлу);
			Прервать;
		КонецЕсли;
		СчетчикСтрок = СчетчикСтрок + 1;
	КонецЦикла;
КонецПроцедуры		

// СРасщепляет" строку на подстроки, используя заданный
//  разделитель. Разделитель может иметь любую длину.
//  Если в качестве разделителя задан пробел, рядом стоящие пробелы
//  считаются одним разделителем, а ведущие и хвостовые пробелы параметра Стр
//  игнорируются.
//
//  Параметры:
//      Стр -           строка, которую необходимо разложить на подстроки.
//                      Параметр передается по значению.
//      Разделитель -   строка-разделитель, по умолчанию - запятая.
//
//  Возвращаемое значение:
//      массив значений, элементы которого - подстроки.
//
&НаСервере
Функция РазложитьСтрокуВМассивПодстрок(Знач Стр, Разделитель = ",")
	
	МассивСтрок = Новый Массив();
	Если Разделитель = " " Тогда
		Стр = СокрЛП(Стр);
		Пока 1 = 1 Цикл
			Поз = СтрНайти(Стр, Разделитель);
			Если Поз = 0 Тогда
				МассивСтрок.Добавить(Стр);
				Возврат МассивСтрок;
			КонецЕсли;
			МассивСтрок.Добавить(Лев(Стр, Поз - 1));
			Стр = СокрЛ(Сред(Стр, Поз));
		КонецЦикла;
	Иначе
		ДлинаРазделителя = СтрДлина(Разделитель);
		Пока 1 = 1 Цикл
			Поз = СтрНайти(Стр, Разделитель);
			Если Поз = 0 Тогда
				Если (СокрЛП(Стр) <> "") Тогда
					МассивСтрок.Добавить(Стр);
				КонецЕсли;
				Возврат МассивСтрок;
			КонецЕсли;
			МассивСтрок.Добавить(Лев(Стр,Поз - 1));
			Стр = Сред(Стр, Поз + ДлинаРазделителя);
		КонецЦикла;
	КонецЕсли;
	
КонецФункции 

// Устанавливает доступность для элементов, с помощью которых можно ответить на вопрос.
//
// Параметры:
//	Доступность - Булево - доступны или нет должны быть элементы.
//
&НаКлиенте
Процедура ДоступностьВыбораПодсистем(Доступ)
	
	Элементы.ЗадатьРазделы.Доступность				= Доступ;
	Элементы.ОбъектныйОтветЗначение.ТолькоПросмотр	= Не Доступ;
	Элементы.РазмещатьНаРабочемСтоле.Доступность	= Доступ;
	
КонецПроцедуры	

// Выводит использование/не использование в командном интерфейсе объекта.
//
&НаКлиенте
Процедура ВыводитьНеИспользоватьВКИ()
	
	ФлагИспользования = ОбъектныйОтвет.НайтиПоЗначению(Элементы.НеТребуетсяРазмещатьВКомандномИнтерфейсе.Заголовок) <> Неопределено;
	НеТребуетсяРазмещатьВКомандномИнтерфейсе = ФлагИспользования;
	ДоступностьВыбораПодсистем(Не ФлагИспользования);
	РазмещатьНаРабочемСтоле = ОбъектныйОтвет.НайтиПоЗначению(Элементы.РазмещатьНаРабочемСтоле.Заголовок) <> Неопределено;
	
КонецПроцедуры

#КонецОбласти
