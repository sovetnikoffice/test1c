#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если СпособУстановкиКурса = Перечисления.СпособыУстановкиКурсаВалюты.РасчетПоФормуле Тогда
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	Валюты.Наименование КАК СимвольныйКод
		|ИЗ
		|	Справочник.Валюты КАК Валюты
		|ГДЕ
		|	(Валюты.СпособУстановкиКурса = ЗНАЧЕНИЕ(Перечисление.СпособыУстановкиКурсаВалюты.НаценкаНаКурсДругойВалюты)
		|			ИЛИ Валюты.СпособУстановкиКурса = ЗНАЧЕНИЕ(Перечисление.СпособыУстановкиКурсаВалюты.РасчетПоФормуле))";
		
		Запрос = Новый Запрос(ТекстЗапроса);
		ЗависимыеВалюты = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("СимвольныйКод");
		
		Для Каждого Валюта Из ЗависимыеВалюты Цикл
			Если СтрНайти(ФормулаРасчетаКурса, Валюта) > 0 Тогда
				Отказ = Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОсновнаяВалюта.ОсновнаяВалюта) Тогда
		Отказ = Истина;
	КонецЕсли;
	
	Если Отказ Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Курс валюты можно связать только с курсом независимой валюты.'"));
	КонецЕсли;
	
	Если СпособУстановкиКурса <> Перечисления.СпособыУстановкиКурсаВалюты.НаценкаНаКурсДругойВалюты Тогда
		ИсключаемыеРеквизиты = Новый Массив;
		ИсключаемыеРеквизиты.Добавить("ОсновнаяВалюта");
		ИсключаемыеРеквизиты.Добавить("Наценка");
		ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, ИсключаемыеРеквизиты);
	КонецЕсли;
	
	Если СпособУстановкиКурса <> Перечисления.СпособыУстановкиКурсаВалюты.РасчетПоФормуле Тогда
		ИсключаемыеРеквизиты = Новый Массив;
		ИсключаемыеРеквизиты.Добавить("ФормулаРасчетаКурса");
		ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, ИсключаемыеРеквизиты);
	КонецЕсли;
	
	Если Не ЭтоНовый()
		И СпособУстановкиКурса = Перечисления.СпособыУстановкиКурсаВалюты.НаценкаНаКурсДругойВалюты
		И РаботаСКурсамиВалют.СписокЗависимыхВалют(Ссылка).Количество() > 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Валюта не может быть подчиненной, так как она является основной для других валют.'"));
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	РаботаСКурсамиВалют.ПроверитьКорректностьКурсаНа01_01_1980(Ссылка);
	
	Если ДополнительныеСвойства.Свойство("ОбновитьКурсы") Тогда
		Если ОбщегоНазначенияПовтИсп.РазделениеВключено() Тогда
			РаботаСКурсамиВалют.ПриОбновленииКурсовВалютВМоделиСервиса(ЭтотОбъект);
		Иначе
			ОбновитьКурсВалюты(ЭтотОбъект);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтоНовый() Тогда
		ДополнительныеСвойства.Вставить("ОбновитьКурсы");
		ДополнительныеСвойства.Вставить("ЭтоНовый");
	Иначе
		ПредыдущиеЗначения = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, "Код,СпособУстановкиКурса,ОсновнаяВалюта,Наценка,ФормулаРасчетаКурса");
		Если (ПредыдущиеЗначения.СпособУстановкиКурса <> СпособУстановкиКурса)
			Или (СпособУстановкиКурса = Перечисления.СпособыУстановкиКурсаВалюты.ЗагрузкаИзИнтернета 
				И ПредыдущиеЗначения.Код <> Код)
			Или (СпособУстановкиКурса = Перечисления.СпособыУстановкиКурсаВалюты.НаценкаНаКурсДругойВалюты
				И (ПредыдущиеЗначения.ОсновнаяВалюта <> ОсновнаяВалюта Или ПредыдущиеЗначения.Наценка <> Наценка))
			Или (СпособУстановкиКурса = Перечисления.СпособыУстановкиКурсаВалюты.РасчетПоФормуле
				И ПредыдущиеЗначения.ФормулаРасчетаКурса <> ФормулаРасчетаКурса) Тогда
			ДополнительныеСвойства.Вставить("ОбновитьКурсы");
		КонецЕсли;
	КонецЕсли;
	
	Если СпособУстановкиКурса <> Перечисления.СпособыУстановкиКурсаВалюты.НаценкаНаКурсДругойВалюты Тогда
		ОсновнаяВалюта = Справочники.Валюты.ПустаяСсылка();
		Наценка = 0;
	КонецЕсли;
	
	Если СпособУстановкиКурса <> Перечисления.СпособыУстановкиКурсаВалюты.РасчетПоФормуле Тогда
		ФормулаРасчетаКурса = "";
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОбновитьКурсВалюты(ПодчиненнаяВалюта) 
	
	Если СпособУстановкиКурса = Перечисления.СпособыУстановкиКурсаВалюты.НаценкаНаКурсДругойВалюты Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	КурсыВалют.Период,
		|	КурсыВалют.Валюта,
		|	КурсыВалют.Курс,
		|	КурсыВалют.Кратность
		|ИЗ
		|	РегистрСведений.КурсыВалют КАК КурсыВалют
		|ГДЕ
		|	КурсыВалют.Валюта = &ВалютаИсточник";
		Запрос.УстановитьПараметр("ВалютаИсточник", ПодчиненнаяВалюта.ОсновнаяВалюта);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		НаборЗаписей = РегистрыСведений.КурсыВалют.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Валюта.Установить(ПодчиненнаяВалюта.Ссылка);
		
		Наценка = ПодчиненнаяВалюта.Наценка;
		
		Пока Выборка.Следующий() Цикл
			
			НоваяЗаписьНабораКурсов = НаборЗаписей.Добавить();
			НоваяЗаписьНабораКурсов.Валюта    = ПодчиненнаяВалюта.Ссылка;
			НоваяЗаписьНабораКурсов.Кратность = Выборка.Кратность;
			НоваяЗаписьНабораКурсов.Курс      = Выборка.Курс + Выборка.Курс * Наценка / 100;
			НоваяЗаписьНабораКурсов.Период    = Выборка.Период;
			
		КонецЦикла;
		
		НаборЗаписей.ДополнительныеСвойства.Вставить("ОтключитьКонтрольПодчиненныхВалют");
		Если ПодчиненнаяВалюта.ДополнительныеСвойства.Свойство("ЭтоНовый") Тогда
			НаборЗаписей.ДополнительныеСвойства.Вставить("ПропуститьПроверкуЗапретаИзменения");
		КонецЕсли;

		НаборЗаписей.Записать();
		
	ИначеЕсли СпособУстановкиКурса = Перечисления.СпособыУстановкиКурсаВалюты.РасчетПоФормуле Тогда
		
		// Получить основные валюты для ПодчиненнаяВалюта.
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Валюты.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Валюты КАК Валюты
		|ГДЕ
		|	&ФормулаРасчетаКурса ПОДОБНО ""%"" + Валюты.Наименование + ""%""";
		
		Запрос.УстановитьПараметр("ФормулаРасчетаКурса", ПодчиненнаяВалюта.ФормулаРасчетаКурса);
		ОсновныеВалюты = Запрос.Выполнить().Выгрузить();
		
		Если ОсновныеВалюты.Количество() = 0 Тогда
			ТекстОшибки = НСтр("ru = 'В формуле должна быть использована хотя бы одна основная валюта.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, , "Объект.ФормулаРасчетаКурса");
			ВызватьИсключение ТекстОшибки;
		КонецЕсли;
		
		ОбновленныеПериоды = Новый Соответствие; // Кэш для однократного пересчета курса за один и тот же период.
		// Перезаписать курсы основных валют для обновления курса валюты ПодчиненнаяВалюта.
		Для каждого ЗаписьОсновнойВалюты Из ОсновныеВалюты Цикл
			НаборЗаписей = РегистрыСведений.КурсыВалют.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Валюта.Установить(ЗаписьОсновнойВалюты.Ссылка);
			НаборЗаписей.Прочитать();
			НаборЗаписей.ДополнительныеСвойства.Вставить("ОбновитьКурсЗависимойВалюты", ПодчиненнаяВалюта.Ссылка);
			НаборЗаписей.ДополнительныеСвойства.Вставить("ОбновленныеПериоды", ОбновленныеПериоды);
			
			Если ПодчиненнаяВалюта.ДополнительныеСвойства.Свойство("ЭтоНовый") Тогда
				НаборЗаписей.ДополнительныеСвойства.Вставить("ПропуститьПроверкуЗапретаИзменения");
			КонецЕсли;
			
			НаборЗаписей.Записать();
		КонецЦикла
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
