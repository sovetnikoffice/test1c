&НаКлиенте
Перем ПараметрыОбработчикаОжидания;
&НаКлиенте
Перем ОтключитьФормированиеОтчета;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Параметры.Контрагент) Тогда
		Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Параметры.Контрагент, "ЭтоГруппа,ИНН");
		Если НЕ Реквизиты.ЭтоГруппа 
			И ЗначениеЗаполнено(Реквизиты.ИНН) Тогда
			СтрокаПоиска = Реквизиты.ИНН;
			Контрагент = Параметры.Контрагент;
		КонецЕсли;
	ИначеЕсли ЗначениеЗаполнено(Параметры.ИНН) Тогда
		СтрокаПоиска = Параметры.ИНН;
	КонецЕсли;
	
	ПоискПоИНН = СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СтрокаПоиска);
	Если ПоискПоИНН 
		И (СтрДлина(СтрокаПоиска) = 10 
		ИЛИ СтрДлина(СтрокаПоиска) = 12) Тогда
		СформироватьОтчетНаСервере(СтрокаПоиска);
	КонецЕсли;
	
	УправлениеФормойНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ЗначениеЗаполнено(ИдентификаторЗадания) Тогда
		ДлительныеОперацииКлиент.ИнициализироватьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
		ПодключитьОбработчикОжидания("Подключаемый_ПроверитьВыполнениеЗадания", 0.5, Истина);
		ОбщегоНазначенияКлиентСервер.УстановитьСостояниеПоляТабличногоДокумента(
			Элементы.ТабличныйДокумент, "ФормированиеОтчета");
	ИначеЕсли ЗначениеЗаполнено(ОписаниеОшибки) Тогда
		ПодключитьОбработчикОжидания("Подключаемый_ПоказатьПредупреждениеОбОшибке", 0.1, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	Если ЗначениеЗаполнено(ИдентификаторЗадания) Тогда
		ОтменитьВыполнениеЗадания(ИдентификаторЗадания);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
 
#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СтрокаПоискаПриИзменении(Элемент)
	
	СформироватьОтчетНаКлиенте(СтрокаПоиска);
	
КонецПроцедуры

&НаКлиенте
Процедура ТабличныйДокументОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ТипЗнч(Расшифровка) <> Тип("Структура")
		ИЛИ НЕ Расшифровка.Свойство("Действие") Тогда
		Возврат;
	КонецЕсли;
	
	Если Расшифровка.Действие = "Показать" 
		ИЛИ Расшифровка.Действие = "Свернуть" Тогда
		
		ПоказатьСкрытьОбластьДокумента(Расшифровка);
		
	ИначеЕсли Расшифровка.Действие = "Открыть" Тогда
		
		Если НЕ Расшифровка.Свойство("ИНН") Тогда
			Возврат;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Расшифровка.ИНН) 
			ИЛИ (СтрДлина(Расшифровка.ИНН) <> 10
			И СтрДлина(Расшифровка.ИНН) <> 12) Тогда
			Возврат;
		КонецЕсли;
		ПараметрыФормы = Новый Структура("ИНН", Расшифровка.ИНН);
		ОткрытьФорму("Отчет.ДосьеКонтрагента.Форма", ПараметрыФормы, , Расшифровка.ИНН);
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти
 
#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СформироватьОтчет(Команда)
	
	Если ОтключитьФормированиеОтчета <> Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(СтрокаПоиска) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			Нстр("ru='Поле ""ИНН или наименование контрагента"" не заполнено'"), , "СтрокаПоиска");
		Возврат;
	КонецЕсли;
	
	СформироватьОтчетНаКлиенте(СтрокаПоиска);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВСправочник(Команда)
	
	СвойстваКонтрагентов = ПроверкаКонтрагентовКлиентСервер.СвойстваСправочникаКонтрагенты();
	Если НЕ ЗначениеЗаполнено(СвойстваКонтрагентов.Имя)
		ИЛИ НЕ ЗначениеЗаполнено(НайденныйИНН) Тогда
		Возврат;
	КонецЕсли;
	ПараметрыФормы = Новый Структура("ТекстЗаполнения", НайденныйИНН);
	ОткрытьФорму("Справочник." + СвойстваКонтрагентов.Имя + ".ФормаОбъекта", ПараметрыФормы);
	
КонецПроцедуры

#КонецОбласти
 
#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УправлениеФормойНаСервере()
	
	СвойстваКонтрагентов = ПроверкаКонтрагентовКлиентСервер.СвойстваСправочникаКонтрагенты();
	ИмяСправочника = СвойстваКонтрагентов.Имя;
	Элементы.КнопкаДобавитьВСправочник.Видимость = ЗначениеЗаполнено(ИмяСправочника)
		И ПравоДоступа("Добавление", Метаданные.Справочники[ИмяСправочника])
		И НЕ ЗначениеЗаполнено(Контрагент) 
		И ЗначениеЗаполнено(НайденныйИНН);
	
	Если ЗначениеЗаполнено(Контрагент) Тогда
		Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Досье контрагента: %1'"),
			Контрагент);
	Иначе
		Заголовок = НСтр("ru='Досье контрагента'");
	КонецЕсли;
	
	ТекущийЭлемент = ?(НЕ ЗначениеЗаполнено(ОписаниеОшибки) И ТабличныйДокумент.ВысотаТаблицы > 0, 
		Элементы.ТабличныйДокумент, 
		Элементы.СтрокаПоиска);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСкрытьОбластьДокумента(Расшифровка)
	
	Если НЕ Расшифровка.Свойство("ИмяОбласти") Тогда
		Возврат;
	КонецЕсли;
	
	Отбор = Новый Структура("ИмяОбласти", Расшифровка.ИмяОбласти);
	СтрокиТаблицы = ОбластиРасшифровки.НайтиСтроки(Отбор);
	Если СтрокиТаблицы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	СтрокаОбласти = СтрокиТаблицы[0];
	
	НомерСтрокиЕще = СтрокаОбласти.ПерваяСтрока - 1;
	
	Если Расшифровка.Действие = "Показать" Тогда
		ТабличныйДокумент.Область(НомерСтрокиЕще, , НомерСтрокиЕще).Видимость = Ложь;
		ТабличныйДокумент.Область(СтрокаОбласти.ПерваяСтрока, , СтрокаОбласти.ПоследняяСтрока).Видимость = Истина;
		Элементы.ТабличныйДокумент.ТекущаяОбласть = ТабличныйДокумент.Область(СтрокаОбласти.ПоследняяСтрока, 2);
	Иначе // "Свернуть"
		ТабличныйДокумент.Область(НомерСтрокиЕще, , НомерСтрокиЕще).Видимость = Истина;
		ТабличныйДокумент.Область(СтрокаОбласти.ПерваяСтрока, , СтрокаОбласти.ПоследняяСтрока).Видимость = Ложь;
		Элементы.ТабличныйДокумент.ТекущаяОбласть = ТабличныйДокумент.Область(НомерСтрокиЕще, 2);
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура СформироватьОтчетНаКлиенте(ТекстПоиска)
	
	Если НЕ ЗначениеЗаполнено(ТекстПоиска) Тогда
		Возврат;
	КонецЕсли;
	
	ПоискПоИНН = СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(ТекстПоиска);
	Если ПоискПоИНН Тогда
		
		Если СтрДлина(ТекстПоиска) <> 10 
			И СтрДлина(ТекстПоиска) <> 12 Тогда
			ТекстОшибки = НСтр("ru='Для поиска по ИНН необходимо ввести 10 или 12 цифр.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, , "СтрокаПоиска");
			Возврат;
		КонецЕсли;
		
		ОбщегоНазначенияКлиентСервер.УстановитьСостояниеПоляТабличногоДокумента(
			Элементы.ТабличныйДокумент, "ФормированиеОтчета");
		
		Результат = СформироватьОтчетНаСервере(ТекстПоиска);
		
		Если НЕ Результат Тогда
			ДлительныеОперацииКлиент.ИнициализироватьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
			ПодключитьОбработчикОжидания("Подключаемый_ПроверитьВыполнениеЗадания", 1, Истина);
		Иначе
			ОбщегоНазначенияКлиентСервер.УстановитьСостояниеПоляТабличногоДокумента(
				Элементы.ТабличныйДокумент, "НеИспользовать");
				
			// Обработка ошибок
			Если ЗначениеЗаполнено(ОписаниеОшибки) Тогда
				Если ОписаниеОшибки = "НеУказаныПараметрыАутентификации" Тогда
					ТекстВопроса = НСтр("ru='Для автоматического заполнения реквизитов контрагентов
						|необходимо подключиться к интернет-поддержке пользователей.
						|Подключиться сейчас?'");
					ОписаниеОповещения = Новый ОписаниеОповещения("ПодключитьИнтернетПоддержку", ЭтотОбъект);
					ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
				ИначеЕсли ОписаниеОшибки = "НеУказанПароль" Тогда
					ТекстВопроса = НСтр("ru='Необходимо указать пароль к Интернет-поддержке пользователей
						|и установить флажок ""Запомнить пароль"".
						|Указать сейчас?'");
					ОписаниеОповещения = Новый ОписаниеОповещения("ПодключитьИнтернетПоддержку", ЭтотОбъект);
					ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
				Иначе
					ПоказатьПредупреждение(, ОписаниеОшибки);
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
		
	Иначе // Поиск по наименованию
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("СтрокаПоиска", ТекстПоиска);
		ПараметрыФормы.Вставить("Заголовок",    НСтр("ru='Поиск контрагента'"));
		ДопПараметры = Новый Структура;
		ОписаниеОповещения = Новый ОписаниеОповещения("НайтиПоНаименованиюЗавершение", ЭтотОбъект, ДопПараметры);
		ОткрытьФорму("ОбщаяФорма.ЗаполнениеРеквизитовКонтрагента", 
			ПараметрыФормы, ЭтотОбъект, , , , ОписаниеОповещения);
		
	КонецЕсли;
	
	ОтключитьФормированиеОтчета = Истина;
	ПодключитьОбработчикОжидания("Подключаемый_ВключитьФормированиеОтчета", 0.1, Истина);
	
КонецПроцедуры

&НаСервере
Функция СформироватьОтчетНаСервере(ТекстПоиска)
	
	ИдентификаторЗадания = Неопределено;
	ОписаниеОшибки       = "";
	
	Если НЕ ПроверитьЗаполнение() Тогда 
		Возврат Истина;
	КонецЕсли;
	
	ПараметрыОтчета = Новый Структура;
	ПараметрыОтчета.Вставить("ИНН", ТекстПоиска);
	Если ЗначениеЗаполнено(Контрагент)
		И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Контрагент, "ИНН") <> ТекстПоиска Тогда
		Контрагент = Неопределено;
	КонецЕсли;
	ПараметрыОтчета.Вставить("Контрагент", Контрагент);
	РезультатВыполнения = ДлительныеОперации.ЗапуститьВыполнениеВФоне(
		Новый УникальныйИдентификатор, 
		"Отчеты.ДосьеКонтрагента.СформироватьОтчет", 
		ПараметрыОтчета, 
		СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Формирование отчета: Досье контрагента: %1'"),
			СтрокаПоиска));
		
	АдресХранилища = РезультатВыполнения.АдресХранилища;
	
	Если РезультатВыполнения.ЗаданиеВыполнено Тогда
		ЗагрузитьПодготовленныеДанные();
		ИдентификаторЗадания = Неопределено;
	Иначе
		ИдентификаторЗадания = РезультатВыполнения.ИдентификаторЗадания;
	КонецЕсли;
	
	Возврат РезультатВыполнения.ЗаданиеВыполнено;

КонецФункции

&НаКлиенте
Процедура Подключаемый_ПоказатьПредупреждениеОбОшибке()

	ПоказатьПредупреждение(, ОписаниеОшибки);
	ОписаниеОшибки = "";

КонецПроцедуры 

&НаКлиенте
Процедура Подключаемый_ПроверитьВыполнениеЗадания()
	
	Если ЗначениеЗаполнено(ИдентификаторЗадания) Тогда
		
		Если ЗаданиеВыполнено(ИдентификаторЗадания) Тогда
			ИдентификаторЗадания = Неопределено;
			ЗагрузитьПодготовленныеДанные();
			Если ЗначениеЗаполнено(ОписаниеОшибки) Тогда
				ПоказатьПредупреждение(, ОписаниеОшибки);
				ОписаниеОшибки = "";
			КонецЕсли;
		Иначе
			ДлительныеОперацииКлиент.ОбновитьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
			ПодключитьОбработчикОжидания("Подключаемый_ПроверитьВыполнениеЗадания",
				ПараметрыОбработчикаОжидания.ТекущийИнтервал,
				Истина);
		КонецЕсли;
	
	КонецЕсли; 
	
	Если НЕ ЗначениеЗаполнено(ИдентификаторЗадания) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьСостояниеПоляТабличногоДокумента(
			Элементы.ТабличныйДокумент, "НеИспользовать");
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВключитьФормированиеОтчета()

	ОтключитьФормированиеОтчета = Неопределено;

КонецПроцедуры 

&НаКлиенте
Процедура ПодключитьИнтернетПоддержку(Ответ, ДопПараметры) Экспорт

	Если Ответ = КодВозвратаДиалога.Да Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ПодключитьИнтернетПоддержкуЗавершение", ЭтотОбъект, ДопПараметры);
		СтандартныеПодсистемыКлиент.АвторизоватьНаСайтеПоддержкиПользователей(ЭтотОбъект, ОписаниеОповещения);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПодключитьИнтернетПоддержкуЗавершение(Результат, ДопПараметры) Экспорт

	Если Результат <> Неопределено Тогда
		СформироватьОтчетНаКлиенте(СтрокаПоиска);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура НайтиПоНаименованиюЗавершение(Результат, ДопПараметры) Экспорт

	Если НЕ ЗначениеЗаполнено(Результат) 
		ИЛИ ТипЗнч(Результат) <> Тип("Строка") Тогда
		Возврат;
	КонецЕсли;
	
	СформироватьОтчетНаКлиенте(Результат);

КонецПроцедуры 

&НаСервереБезКонтекста
Функция ЗаданиеВыполнено(ИдентификаторЗадания)
	
	Возврат ДлительныеОперации.ЗаданиеВыполнено(ИдентификаторЗадания);
	
КонецФункции

&НаСервереБезКонтекста
Процедура ОтменитьВыполнениеЗадания(ИдентификаторЗадания)
	
	ДлительныеОперации.ОтменитьВыполнениеЗадания(ИдентификаторЗадания);
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьПодготовленныеДанные()

	ДанныеОтчета   = ПолучитьИзВременногоХранилища(АдресХранилища);
	ОписаниеОшибки = ДанныеОтчета.ОписаниеОшибки;
	Контрагент     = ДанныеОтчета.Контрагент;
	ТабличныйДокумент.Очистить();
	Элементы.ТабличныйДокумент.ИспользуемоеИмяФайла = Неопределено;
	ТабличныйДокумент.ТекущаяОбласть = ТабличныйДокумент.Область(1, 1, 1, 1);
	ОбластиРасшифровки.Очистить();
	НайденныйИНН = "";
	Если НЕ ЗначениеЗаполнено(ОписаниеОшибки) Тогда
		ТабличныйДокумент.Вывести(ДанныеОтчета.ТабличныйДокумент);
		ТабличныйДокумент.ФиксацияСверху = 2;
		Элементы.ТабличныйДокумент.ИспользуемоеИмяФайла = СокрЛП(ДанныеОтчета.ИспользуемоеИмяФайла);
		НайденныйИНН = ДанныеОтчета.НайденныйИНН;
		Для каждого СтрокаОбласти Из ДанныеОтчета.ОбластиРасшифровки Цикл
			НоваяСтрока = ОбластиРасшифровки.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаОбласти);
		КонецЦикла; 
	КонецЕсли;
	
	УправлениеФормойНаСервере();

КонецПроцедуры

#КонецОбласти

